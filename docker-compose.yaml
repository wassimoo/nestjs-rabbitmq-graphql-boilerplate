version: "3.3"

services:
  api:
    container_name: "api"
    build: ./api
    hostname: api
    ports:
      - "3000:3000"
    restart: always
    command: npm run start:debug
    working_dir: /var/www/api
    volumes:
      - ./api:/var/www/api
    depends_on:
      - rabbitmq
    env_file:
      - ./api/.env
    networks:
      - rabbit_network

  mailer:
    container_name: "mailer"
    build: ./mailer
    hostname: mailer
    restart: always
    command: npm run start:debug
    working_dir: /var/www/mailer
    volumes:
      - ./mailer:/var/www/mailer
    depends_on:
      - rabbitmq
    env_file:
      - ./mailer/.env
    networks:
      - rabbit_network

  users:
    container_name: "users"
    build: ./users
    hostname: users
    restart: always
    command: npm run start:debug
    working_dir: /var/www/users
    volumes:
      - ./users:/var/www/users
    depends_on:
      - rabbitmq
    env_file:
      - ./users/.env
    networks:
      - rabbit_network
      - postgres

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    tty: true
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbit_network
      
  postgres:
    container_name: postgres_db
    image: postgres
    tty: true
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
       - ./db/postgres:/data/postgres
       - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    tty: true
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

networks:
  rabbit_network:
    driver: bridge
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin: